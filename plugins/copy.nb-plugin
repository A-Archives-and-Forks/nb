#!/usr/bin/env bash
###############################################################################
# copy / duplicate
#
# A plugin for `nb` providing copy / duplicate functionality.
#
# Install with:
#   nb plugin install https://github.com/xwmx/nb/blob/master/plugins/copy.nb-plugin
#
# https://github.com/xwmx/nb
###############################################################################

# Add subcommand name(s) to the $NB_PLUGIN_SUBCOMMANDS array.
NB_PLUGIN_SUBCOMMANDS+=(
  copy
  duplicate
)

# Define help and usage text in a `desc` block.
desc "copy" <<HEREDOC
Usage:
  nb copy (<id> | <filename> | <path> | <title>)

Description:
  Create a copy of the specified item in the current notebook.

Alias: \`duplicate\`
HEREDOC

# Define the subcommand as a function, named with a leading underscore.
_copy() {
  local _selection="${1:-}"

  # Check for the presence of a selection, exiting and printing help if not
  # found.
  if [[ -z "${_selection:-}" ]]
  then
    _exit_1 _help "copy"
  fi

  # Get the basename from the selection. The selection argument can be an
  # <id>, <filename>, <path>, or <title>, with or without a notebook name.
  #
  # Examples:
  #   12
  #   example.md
  #   Example Title
  #   notebook:42
  #   notebook:Example
  #   notebook:Example\ Title
  local _source_basename
  _source_basename="$(_get_selection_basename "${_selection}")"

  # Set the current notebooks based on selection.
  #
  # NOTE: Important! This sets the current notebook for all subsequent
  # operations.
  _set_selection_notebook "${_source_basename}"

  # Get a unique basename based on the source basename.
  local _target_basename
  _target_basename="$(_get_unique_basename "${_source_basename}")"

  # Print the source contents and pipe to `_add()`.
  _show "${_source_basename}" --no-color --print | _add "${_target_basename}"
}
# Use `_alias_subcommand` to create a full alias, with linked help / usage.
# NOTE: Aliases also have to be added to the $NB_PLUGIN_SUBCOMMANDS array.
_alias_subcommand "copy" "duplicate"
